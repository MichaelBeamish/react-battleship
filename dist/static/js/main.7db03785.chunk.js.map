{"version":3,"sources":["components/layout/SignedInLinks.jsx","store/actions/authActions.js","components/layout/SignedOutLinks.jsx","components/layout/Navbar.jsx","components/dashboard/Splash.jsx","components/dashboard/GameSummary.jsx","components/dashboard/Home.jsx","components/auth/SignIn.jsx","components/auth/SignUp.jsx","components/dashboard/InviteButton.jsx","components/dashboard/InviteUsers.jsx","components/dashboard/UsersInvited.jsx","components/dashboard/HostPrivateGame.jsx","store/actions/gameActions.js","components/games/Block.jsx","components/games/Row.jsx","components/games/Grid.jsx","components/games/Ship.jsx","components/games/Ships.jsx","components/games/ShipsButtons.jsx","components/games/PlayerSetup.jsx","components/games/CreatingGamePage.jsx","components/games/Pins.jsx","components/games/GamePlay.jsx","App.js","serviceWorker.js","config/fbconfig.js","store/reducers/authReducer.js","store/reducers/gameReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","signOut","dispatch","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Splash","GameSummary","_ref","game","id","thisPlayer","players","filter","player","userReference","otherPlayer","utcSeconds","createdAt","seconds","utcMilliseconds","nanoseconds","date","Date","setUTCSeconds","setUTCMilliseconds","undefined","otherUser","thisUser","setUpBoard","gameName","toUpperCase","whosTurn","nickname","moment","calendar","Home","newGames","_this$props","this","games","users","JSON","parse","stringify","yourGames","forEach","gameObject","user","push","firstName","length","map","status","dashboard_GameSummary","key","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","required","credentials","signInWithEmailAndPassword","catch","err","SignUp","lastName","passwordConfirmation","passwordsMatch","signUp","passMessage","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","InviteButton","addPlayerToGame","includes","InviteUsers","searchBar","_e$target","name","listOfUsers","_this2","toLowerCase","dashboard_InviteButton","placeholder","UsersInvited","removePlayerFromGame","playersAdded","listOfPlayersAdded","HostPrivateGame","notifications","console","log","toConsumableArray","concat","playerID","generateGame","gameInfo","gameCreatedID","dashboard_UsersInvited","dashboard_InviteUsers","ownProps","gameReducer","receivedPlayers","_ref4","player1","winner","guessedBlocks","AC","BS","SM","DS","CR","MISSES","player2","add","payload","Block","letter","number","blockClicked","lastLetterOnly","Row","row","i","games_Block","Grid","typeOfGrid","grid","letters","games_Row","Ship","ship","acronym","orientation","color","style","dynamicStyle","Ships","allShips","who","sunkShips","shipsArray","location","windowInfo","document","getElementById","getBoundingClientRect","scrollLeft","window","pageXOffset","documentElement","scrollTop","pageYOffset","top","position","left","shipList","index","games_Ship","ShipsButtons","handleShipClick","buttonList","PlayerSetup","haveAllShipsBeenPlaced","messageToUser","allOccupiedBlocks","shipClicked","occupiedBlocks","size","verticalClicked","horizontalClicked","handleFinalize","gameID","ships","finalizePlayerGrid","numLetter","message","blockClickedLetter","charCodeAt","blockClickedNumber","blockClickedNumber2","Number","shipSize","shipAcronym","shipName","okToGo","requiredBlocks","String","fromCharCode","toLocaleUpperCase","thisShipCurrentState","currentStateAllUsedBlocks","currentAllLessCurrentShip","block","newAllUsedBlocks","nextShip","_this$setState","allOptions","currentIndex","indexOf","userIsAuthorized","games_Grid","games_ShipsButtons","games_Ships","match","params","data","thisUserID","find","thisPlayerInfo","otherPlayerInfo","deliveredGame","thisPlayerID","allPlayers","update","createdToNull","Pins","hits","misses","hitsArray","hit","missesArray","miss","hitList","missList","GamePlay","propsLoaded","updated","yourTurnArrived","existingGuesses","guess","thisID","turn","alreadyChecked","countShipsHit","thing","priorGuess","gameOver","submitGuess","shipsFormated","otherShipsFormated","allGuesses","thingsThatAreHits","hitPins","missPins","othersHitPins","othersMissPins","otherPlayerSettingUp","src","alt","games_Pins","guessedBlocksUpdated","nextPlayer","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","CreatingGamePage","Boolean","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","initState","authReducer","arguments","action","objectSpread","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7db03785.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = props => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/\" onClick={props.signOut}>\n          Log Out\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating green darken-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default connect(\n  null,\n  { signOut }\n)(SignedInLinks);\n","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const SIGNOUT_SUCCESS = \"SIGNOUT_SUCCESS\";\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport const SIGNUP_ERROR = \"SIGNUP_ERROR\";\n\nexport const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: LOGIN_SUCCESS });\n      })\n      .catch(err => {\n        dispatch({ type: LOGIN_ERROR, err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: SIGNOUT_SUCCESS });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(resp => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            nickname: newUser.nickname,\n            email: newUser.email,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n          });\n      })\n      .then(() => {\n        dispatch({ type: SIGNUP_SUCCESS });\n      })\n      .catch(err => {\n        dispatch({ type: SIGNUP_ERROR, err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signup\">Register</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\n\nconst Navbar = props => {\n  const { auth, profile } = props;\n\n  const links = auth.uid ? (\n    <SignedInLinks profile={profile} />\n  ) : (\n    <SignedOutLinks />\n  );\n  return (\n    <div className=\"my-nav\">\n      <nav className=\"nav-wrapper\">\n        <div className=\"my-nav\">\n          <NavLink to=\"/\" className=\"brand-logo left nav-header\">\n            Battleship\n          </NavLink>\n          {links}\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\n\nconst Splash = () => {\n  return (\n    <div className=\"most-height valign-wrapper\">\n      <div className=\"splash container center\">\n        <h1>Battleship Splash Page</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Splash;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport moment from \"moment\";\n\nconst GameSummary = ({ game, id }) => {\n  let thisPlayer = game.players.filter(player => player.userReference === id);\n  let otherPlayer = game.players.filter(player => player.userReference !== id);\n  //GENERATE DATE/TIME:\n  let utcSeconds = game.createdAt.seconds;\n  let utcMilliseconds = game.createdAt.nanoseconds / 1000000;\n  let date = new Date(0);\n  date.setUTCSeconds(utcSeconds);\n  date.setUTCMilliseconds(utcMilliseconds);\n\n  if (game.otherUser !== undefined && game.thisUser !== undefined) {\n    return (\n      <div className=\"col l6\">\n        <div className=\"game-summary\">\n          {thisPlayer[0].setUpBoard ? (\n            <div>\n              <div className=\"row\">\n                <div className=\"col l8\">\n                  <div className=\"summary-title\">\n                    <h4 className=\"left\">{game.gameName.toUpperCase()}</h4>\n                  </div>\n                </div>\n                <div className=\"col l4\">\n                  <div className=\"summary-button\">\n                    <NavLink to={\"/game/\" + game.id}>\n                      <button className=\"btn green darken-2\">Load Game</button>\n                    </NavLink>\n                  </div>\n                </div>\n              </div>\n              {otherPlayer[0].setUpBoard ? (\n                <div className=\"sub-display\">\n                  <b>STATUS:</b>\n                  <br />\n                  {game.whosTurn === thisPlayer[0].id ? (\n                    <span>\n                      <span className=\"your-turn-summary\">It's your turn.</span>\n                    </span>\n                  ) : (\n                    <span>It's {game.otherUser.nickname}'s turn.</span>\n                  )}\n                </div>\n              ) : (\n                <div className=\"sub-display\">\n                  <b>STATUS:</b>\n                  <br />\n                  <span>{game.otherUser.nickname} is still setting up.</span>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div>\n              <div className=\"row\">\n                <div className=\"col l8\">\n                  <div className=\"summary-title\">\n                    <h4 className=\"left\">{game.gameName.toUpperCase()}</h4>\n                  </div>\n                </div>\n                <div className=\"col l4\">\n                  <div className=\"summary-button\">\n                    <NavLink to={\"/setup/\" + game.id}>\n                      <button className=\"btn green darken-2\">Load Game</button>\n                    </NavLink>\n                  </div>\n                </div>\n              </div>\n              <div className=\"sub-display\">\n                <b>STATUS:</b>\n                <br />\n                <span>You are still setting up your board.</span>\n              </div>\n            </div>\n          )}\n          <div className=\"sub-display\">\n            <b>Opponent:</b>\n            <br />\n            {game.otherUser.nickname}\n          </div>\n          <div className=\"sub-display\">\n            <b>Started:</b>\n            <br />\n            {moment(date).calendar()}\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default GameSummary;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\"; //Connects redux store to component.\nimport { firestoreConnect } from \"react-redux-firebase\"; //Connects firestore to redux store.\nimport { compose } from \"redux\";\n\nimport { Redirect } from \"react-router-dom\";\n\nimport GameSummary from \"./GameSummary\";\n\nclass Home extends Component {\n  render() {\n    const { auth, profile, games, users } = this.props;\n    let newGames;\n    if (games) {\n      newGames = JSON.parse(JSON.stringify(games));\n    }\n    let yourGames = [];\n    if (games && users) {\n      newGames.forEach(game => {\n        game.players.forEach(player => {\n          if (player.userReference === auth.uid) {\n            let gameObject = game;\n            gameObject.players.forEach(player => {\n              if (player.userReference === auth.uid) {\n                let thisUser = users.filter(\n                  user => user.id === player.userReference\n                );\n                gameObject.thisUser = thisUser[0];\n              } else {\n                let otherUser = users.filter(\n                  user => user.id === player.userReference\n                );\n                gameObject.otherUser = otherUser[0];\n              }\n            });\n            yourGames.push(gameObject);\n          }\n        });\n      });\n    }\n\n    if (!auth.uid) return <Redirect to=\"/splash\" />; //If not logged in redirect.\n    return (\n      <div>\n        <h1 className=\"center\">\n          Welcome\n          {profile.firstName !== undefined ? \" \" + profile.firstName : null}!\n        </h1>\n        <div className=\"center\">\n          <NavLink to=\"/hostPrivateGame\">\n            <button className=\"btn orange\">Create New Game</button>\n          </NavLink>\n        </div>\n        <div className=\"row container games-container\">\n          {yourGames.length > 0 &&\n            users &&\n            yourGames.map(game => {\n              if (game.status === \"inProgress\") {\n                return <GameSummary key={game.id} game={game} id={auth.uid} />;\n              }\n            })}\n          {yourGames.length === 0 ? (\n            <div>You currently have no games.</div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    games: state.firestore.ordered.games,\n    users: state.firestore.ordered.users,\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"users\" }, { collection: \"games\" }])\n)(Home);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { signIn } from \"../../store/actions/authActions\";\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />; //If not logged in redirect to sign in route.\n    return (\n      <div className=\"most-height valign-wrapper\">\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">email</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">password</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">Log In</button>\n              <div className=\"red-text center\">\n                {authError ? <p>{authError}</p> : null}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { authError: state.auth.authError, auth: state.firebase.auth };\n};\n\nexport default connect(\n  mapStateToProps,\n  { signIn }\n)(SignIn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    nickname: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    passwordsMatch: false\n  };\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n    if (e.target.id === \"password\") {\n      if (this.state.passwordConfirmation !== e.target.value) {\n        this.setState({\n          passwordsMatch: true\n        });\n      } else {\n        this.setState({\n          passwordsMatch: false\n        });\n      }\n    }\n    if (e.target.id === \"passwordConfirmation\") {\n      if (this.state.password !== e.target.value) {\n        this.setState({\n          passwordsMatch: true\n        });\n      } else {\n        this.setState({\n          passwordsMatch: false\n        });\n      }\n    }\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.password === this.state.passwordConfirmation) {\n      this.props.signUp(this.state);\n    }\n  };\n  render() {\n    const { authError, auth } = this.props;\n    const passMessage = this.state.passwordsMatch\n      ? \"Passwords don't match.\"\n      : null;\n    if (auth.uid) return <Redirect to=\"/\" />; //If not logged in redirect to sign in route.\n    return (\n      <div className=\"most-height valign-wrapper\">\n        <div className=\"container\">\n          <form onSubmit={this.handleSubmit} className=\"white\">\n            <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"firstName\">first name</label>\n              <input\n                type=\"text\"\n                id=\"firstName\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"lastName\">last name</label>\n              <input\n                type=\"text\"\n                id=\"lastName\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"nickname\">nickname</label>\n              <input\n                type=\"text\"\n                id=\"nickname\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">email</label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"password\">password</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"passwordConfirmation\">confirm password</label>\n              <input\n                type=\"password\"\n                id=\"passwordConfirmation\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n            <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n              <div className=\"red-text center\">\n                {authError ? <p>{authError}</p> : null}\n                <br />\n                {passMessage}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { authError: state.auth.authError, auth: state.firebase.auth };\n};\n\nexport default connect(\n  mapStateToProps,\n  { signUp }\n)(SignUp);\n","import React from \"react\";\n\nconst InviteButton = ({ user, players, addPlayerToGame }) => {\n  if (!players.includes(user.id)) {\n    return (\n      <button onClick={() => addPlayerToGame(user.id)} className=\"btn green\">\n        Invite\n      </button>\n    );\n  } else {\n    return <button className=\"btn red\">Added</button>;\n  }\n};\n\nexport default InviteButton;\n","import React, { Component } from \"react\";\nimport InviteButton from \"./InviteButton\";\n\nclass InviteUsers extends Component {\n  state = {\n    searchBar: \"\"\n  };\n  handleChange = e => {\n    let { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n  render() {\n    const { users, addPlayerToGame, players } = this.props;\n    let listOfUsers;\n    if (users && this.state.searchBar.length) {\n      listOfUsers = users\n        //****FIX FILTER**** it currently wont find a player if you type full name. only first OR last name. also add ability to search by email or nickname.\n        .filter(\n          user =>\n            user.firstName\n              .toLowerCase()\n              .includes(this.state.searchBar.toLowerCase()) ||\n            user.lastName\n              .toLowerCase()\n              .includes(this.state.searchBar.toLowerCase())\n        )\n        .map(user => (\n          <tr key={user.id}>\n            <td>\n              {user.firstName} {user.lastName}\n            </td>\n            <td>{user.nickname}</td>\n            <td>{user.email}</td>\n            <td>\n              <InviteButton\n                addPlayerToGame={addPlayerToGame}\n                user={user}\n                players={players}\n              />\n            </td>\n          </tr>\n        ));\n    } else {\n      listOfUsers = (\n        <tr>\n          <td>Search for your friends above.</td>\n        </tr>\n      );\n    }\n    return (\n      <div>\n        <h4>Invite Friends</h4>\n        <input\n          className=\"white\"\n          type=\"text\"\n          name=\"searchBar\"\n          onChange={this.handleChange}\n          value={this.state.searchBar}\n          placeholder=\" Search for friends.\"\n        />\n        <table>\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Nickname</th>\n              <th>Email</th>\n              <th>Invite</th>\n            </tr>\n          </thead>\n          <tbody>{listOfUsers}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default InviteUsers;\n","import React from \"react\";\n\nconst UsersInvited = ({ auth, users, removePlayerFromGame, playersAdded }) => {\n  let listOfPlayersAdded = [];\n  if (users) {\n    playersAdded.forEach(player => {\n      users.forEach(user => {\n        if (player === user.id && player === auth.uid) {\n          listOfPlayersAdded.push(\n            <tr key={user.id}>\n              <td>\n                {user.firstName} {user.lastName}\n              </td>\n              <td>{user.nickname}</td>\n              <td>{user.email}</td>\n              <td />\n            </tr>\n          );\n        } else if (player === user.id) {\n          listOfPlayersAdded.push(\n            <tr key={user.id}>\n              <td>\n                {user.firstName} {user.lastName}\n              </td>\n              <td>{user.nickname}</td>\n              <td>{user.email}</td>\n              <td>\n                <button\n                  onClick={() => {\n                    removePlayerFromGame(user.id);\n                  }}\n                  className=\"btn red\"\n                >\n                  Remove\n                </button>\n              </td>\n            </tr>\n          );\n        }\n      });\n    });\n  } else {\n    listOfPlayersAdded = (\n      <tr>\n        <td>Loading players...</td>\n      </tr>\n    );\n  }\n  return (\n    <div>\n      <h4>Current Players</h4>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Nickname</th>\n            <th>Email</th>\n            <th>Remove</th>\n          </tr>\n        </thead>\n        <tbody>{listOfPlayersAdded}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default UsersInvited;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\"; //Connects redux store to component.\nimport { firestoreConnect } from \"react-redux-firebase\"; //Connects firestore to redux store.\nimport { compose } from \"redux\";\n\n//COMPONENTS:\nimport InviteUsers from \"./InviteUsers\";\nimport UsersInvited from \"./UsersInvited\";\n\n//Actions:\nimport { generateGame } from \"../../store/actions/gameActions\";\n\nclass HostPrivateGame extends Component {\n  state = {\n    players: [this.props.auth.uid],\n    notifications: \"\",\n    gameName: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  addPlayerToGame = player => {\n    console.log(\"Added player:\", player);\n    if (this.state.players.length < 2) {\n      this.setState({\n        players: [...this.state.players, player],\n        notifications: \"\"\n      });\n    } else {\n      this.setState({\n        notifications: \"Only one opponent allowed.\"\n      });\n    }\n  };\n\n  removePlayerFromGame = playerID => {\n    console.log(\"Removed player:\", playerID);\n    this.setState({\n      players: this.state.players.filter(player => player !== playerID),\n      notifications: \"\"\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.players.length > 1) {\n      this.props.generateGame(this.state.players, this.state.gameName);\n    } else {\n      this.setState({\n        notifications: \"Please choose your opponent.\"\n      });\n    }\n  };\n\n  render() {\n    const { users, auth, gameInfo } = this.props;\n    let notifications = this.state.notifications;\n\n    //REDIRECT TO GAME PAGE IF CREATED:\n    if (gameInfo.gameCreatedID !== null) {\n      return <Redirect to={\"/createGame/\" + gameInfo.gameCreatedID} />;\n    }\n\n    //REDIRECT IF NOT LOGGED IN:\n    if (!auth.uid) return <Redirect to=\"/splash\" />; //If not logged in redirect.\n    return (\n      <div className=\"most-height valign-wrapper\">\n        <div className=\"container\">\n          <h3 className=\"center\">Create New Game</h3>\n          {notifications.length ? (\n            <p className=\"center\">\n              <b className=\"create-game-message\">{notifications}</b>\n            </p>\n          ) : null}\n          <form onSubmit={this.handleSubmit} className=\"bringForward\">\n            <div className=\"row\">\n              <div className=\"col l10\">\n                <div className=\"input-field\">\n                  <label htmlFor=\"gameName\">name your game</label>\n                  <input\n                    type=\"text\"\n                    id=\"gameName\"\n                    onChange={this.handleChange}\n                    required\n                  />\n                </div>\n              </div>\n              <div className=\"col l2\">\n                <div className=\"center\">\n                  <div className=\"input-field\">\n                    <button className=\"btn blue\">Begin Game</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n          <div className=\"row\">\n            <div className=\"col l6 m6\">\n              <div className=\"center current-players-container\">\n                <UsersInvited\n                  users={users}\n                  removePlayerFromGame={this.removePlayerFromGame}\n                  playersAdded={this.state.players}\n                  auth={auth}\n                />\n              </div>\n            </div>\n\n            <div className=\"col l6 m6\">\n              <div className=\"center search-invite-container\">\n                <InviteUsers\n                  users={users}\n                  addPlayerToGame={this.addPlayerToGame}\n                  players={this.state.players}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    users: state.firestore.ordered.users,\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n    gameInfo: state.gameReducer\n  };\n};\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    { generateGame }\n  ),\n  firestoreConnect([{ collection: \"users\" }])\n)(HostPrivateGame);\n","export const FINALIZE_GAME = \"FINALIZE_GAME\";\nexport const FINALIZE_GAME_ERROR = \"FINALIZE_GAME_ERROR\";\nexport const GUESS = \"GUESS\";\nexport const GUESS_ERROR = \"GUESS_ERROR\";\nexport const GAME_OVER = \"GUESS\";\nexport const GAME_OVER_ERROR = \"GUESS_ERROR\";\nexport const GENERATE_GAME = \"GENERATE_GAME\";\nexport const GENERATE_GAME_ERROR = \"GENERATE_GAME_ERROR\";\nexport const CREATED_GAME_TO_NULL = \"CREATED_GAME_TO_NULL\";\n\nexport const createdToNull = () => {\n  return {\n    type: CREATED_GAME_TO_NULL\n  };\n};\n\nexport const gameOver = (\n  gameID,\n  deliveredGame,\n  playerID,\n  guessedBlocksUpdated\n) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    let game = JSON.parse(JSON.stringify(deliveredGame));\n    let allPlayers = game.players;\n    let thisPlayer = allPlayers.filter(player => player.id === playerID);\n    thisPlayer = thisPlayer[0];\n    let otherPlayer = allPlayers.filter(player => player.id !== playerID);\n    otherPlayer = otherPlayer[0];\n\n    //CHANGE STUFF\n    thisPlayer.winner = true;\n    thisPlayer.guessedBlocks = guessedBlocksUpdated;\n\n    allPlayers = [thisPlayer, otherPlayer];\n\n    const firestore = getFirestore();\n    firestore\n      .collection(\"games\")\n      .doc(gameID)\n      .update({\n        players: allPlayers,\n        status: \"gameOver\",\n        winner: playerID\n      })\n      .then(() => {\n        //Then resumes the dispatch.\n        dispatch({ type: GAME_OVER, payload: gameID });\n      })\n      .catch(err => {\n        dispatch({ type: GAME_OVER_ERROR, payload: err });\n      });\n  };\n};\n\nexport const submitGuess = (\n  gameID,\n  deliveredGame,\n  playerID,\n  guessedBlocksUpdated\n) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    let game = JSON.parse(JSON.stringify(deliveredGame));\n    let allPlayers = game.players;\n    let thisPlayer = allPlayers.filter(player => player.id === playerID);\n    thisPlayer = thisPlayer[0];\n    let otherPlayer = allPlayers.filter(player => player.id !== playerID);\n    otherPlayer = otherPlayer[0];\n\n    let nextPlayer;\n    if (playerID === 0) {\n      nextPlayer = 1;\n    } else {\n      nextPlayer = 0;\n    }\n\n    thisPlayer.guessedBlocks = guessedBlocksUpdated;\n\n    allPlayers = [thisPlayer, otherPlayer];\n\n    const firestore = getFirestore();\n    firestore\n      .collection(\"games\")\n      .doc(gameID)\n      .update({\n        players: allPlayers,\n        whosTurn: nextPlayer\n      })\n      .then(() => {\n        //Then resumes the dispatch.\n        dispatch({ type: GUESS, payload: gameID });\n      })\n      .catch(err => {\n        dispatch({ type: GUESS_ERROR, payload: err });\n      });\n  };\n};\n\nexport const finalizePlayerGrid = (gameID, deliveredGame, player, ships) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    let game = JSON.parse(JSON.stringify(deliveredGame));\n    let thisPlayerID = player.id;\n    let allPlayers = game.players;\n    let thisPlayer = allPlayers.filter(player => player.id === thisPlayerID);\n    thisPlayer = thisPlayer[0];\n    let otherPlayer = allPlayers.filter(player => player.id !== thisPlayerID);\n    otherPlayer = otherPlayer[0];\n\n    thisPlayer.setUpBoard = true;\n    thisPlayer.ships = ships;\n\n    allPlayers = [thisPlayer, otherPlayer];\n\n    const firestore = getFirestore();\n    firestore\n      .collection(\"games\")\n      .doc(gameID)\n      .update({\n        players: allPlayers\n      })\n      .then(() => {\n        //Then resumes the dispatch.\n        dispatch({ type: FINALIZE_GAME, payload: gameID });\n      })\n      .catch(err => {\n        dispatch({ type: FINALIZE_GAME_ERROR, payload: err });\n      });\n  };\n};\n\nexport const generateGame = (receivedPlayers, gameName) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    //Uses thunk. A function that takes in the dispatch.\n    //Pauses the dispatch.\n\n    let players = [];\n\n    let player1 = {\n      id: 0,\n      userReference: receivedPlayers[0],\n      winner: false,\n      setUpBoard: false,\n      guessedBlocks: { AC: [], BS: [], SM: [], DS: [], CR: [], MISSES: [] }\n    };\n    players.push(player1);\n\n    let player2 = {\n      id: 1,\n      userReference: receivedPlayers[1],\n      winner: false,\n      setUpBoard: false,\n      guessedBlocks: { AC: [], BS: [], SM: [], DS: [], CR: [], MISSES: [] }\n    };\n    players.push(player2);\n\n    //Make async call to database.\n    const firestore = getFirestore();\n    firestore\n      .collection(\"games\")\n      .add({\n        gameName: gameName,\n        players: players,\n        status: \"inProgress\",\n        winner: \"\",\n        whosTurn: 0,\n        createdAt: new Date()\n      })\n      .then(game => {\n        //Then resumes the dispatch.\n        dispatch({ type: GENERATE_GAME, payload: game.id });\n      })\n      .catch(err => {\n        dispatch({ type: GENERATE_GAME_ERROR, payload: err });\n      });\n  };\n};\n","import React from \"react\";\n\nconst Block = ({ letter, number, blockClicked }) => {\n  let lastLetterOnly = letter;\n  if (letter.length > 1) {\n    lastLetterOnly = letter[letter.length - 1];\n  }\n  if (blockClicked) {\n    return (\n      <div\n        id={letter + number}\n        onClick={() => blockClicked(lastLetterOnly + number)}\n        key={lastLetterOnly + number}\n        className=\"block\"\n      >\n        <small className=\"block-text\">\n          {lastLetterOnly}\n          {number}\n        </small>\n      </div>\n    );\n  } else {\n    return (\n      <div id={letter + number} key={lastLetterOnly + number} className=\"block\">\n        <small className=\"block-text\">\n          {lastLetterOnly}\n          {number}\n        </small>\n      </div>\n    );\n  }\n};\n\nexport default Block;\n","import React from \"react\";\n\nimport Block from \"./Block\";\n\nconst Row = ({ letter, blockClicked }) => {\n  let row = [];\n  for (let i = 1; i <= 10; i++) {\n    row.push(\n      <Block key={i} letter={letter} number={i} blockClicked={blockClicked} />\n    );\n  }\n\n  return (\n    <div key={\"row\" + letter} className=\"grid-row\">\n      {row}\n    </div>\n  );\n};\n\nexport default Row;\n","import React from \"react\";\n\nimport Row from \"./Row\";\n\nconst Grid = ({ typeOfGrid, blockClicked }) => {\n  let grid = [];\n  let letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\n  if (typeOfGrid === \"playerSetup\") {\n    letters.forEach(letter => {\n      grid.push(\n        <Row key={letter} letter={letter} blockClicked={blockClicked} />\n      );\n    });\n  } else if (typeOfGrid === \"gamePlay\") {\n    letters.forEach(letter => {\n      grid.push(\n        <Row key={letter} letter={letter} blockClicked={blockClicked} />\n      );\n    });\n  } else {\n    letters.forEach(letter => {\n      grid.push(\n        <Row\n          key={letter}\n          letter={\"other\" + letter}\n          blockClicked={blockClicked}\n        />\n      );\n    });\n  }\n  return <div>{grid}</div>;\n};\n\nexport default Grid;\n","import React from \"react\";\n\nconst Ship = ({ ship }) => {\n  return (\n    <div\n      key={ship.acronym}\n      className={`ship ${ship.acronym + ship.orientation} ${ship.color}`}\n      style={ship.dynamicStyle}\n    >\n      <p className={`no-wrap ${ship.orientation}`}>{ship.name.toUpperCase()}</p>\n    </div>\n  );\n};\n\nexport default Ship;\n","import React from \"react\";\nimport Ship from \"./Ship\";\n\nconst Ships = ({ allShips, who, sunkShips }) => {\n  if (allShips !== null) {\n    if (who === \"me\") {\n      let shipsAbbreviated = [\"AC\", \"BS\", \"SM\", \"DS\", \"CR\"];\n      let shipsArray = [];\n      shipsAbbreviated.forEach(ship => {\n        if (allShips[ship].location !== null) {\n          let element = document.getElementById(allShips[ship].location);\n          let windowInfo = element.getBoundingClientRect();\n          let scrollLeft =\n            window.pageXOffset || document.documentElement.scrollLeft;\n          let scrollTop =\n            window.pageYOffset || document.documentElement.scrollTop;\n          let top = windowInfo.top + scrollTop;\n          let left = windowInfo.left + scrollLeft;\n\n          let dynamicStyle = {\n            position: \"absolute\",\n            left: left + \"px\",\n            top: top + \"px\"\n          };\n          let orientation = allShips[ship].orientation;\n          let acronym = allShips[ship].acronym;\n          let name = allShips[ship].name;\n          let color = allShips[ship].color;\n          shipsArray.push({\n            color,\n            acronym,\n            name,\n            dynamicStyle,\n            orientation\n          });\n        }\n      });\n      let shipList = shipsArray.map((ship, index) => (\n        <Ship key={index} ship={ship} />\n      ));\n      return <div>{shipList}</div>;\n    } else {\n      let shipsAbbreviated = sunkShips;\n      let shipsArray = [];\n      shipsAbbreviated.forEach(ship => {\n        if (allShips[ship].location !== null) {\n          let element = document.getElementById(\n            \"other\" + allShips[ship].location\n          );\n          let windowInfo = element.getBoundingClientRect();\n          let scrollLeft =\n            window.pageXOffset || document.documentElement.scrollLeft;\n          let scrollTop =\n            window.pageYOffset || document.documentElement.scrollTop;\n          let top = windowInfo.top + scrollTop;\n          let left = windowInfo.left + scrollLeft;\n\n          let dynamicStyle = {\n            position: \"absolute\",\n            left: left + \"px\",\n            top: top + \"px\"\n          };\n          let orientation = allShips[ship].orientation;\n          let acronym = allShips[ship].acronym;\n          let name = allShips[ship].name;\n          let color = allShips[ship].color;\n          shipsArray.push({\n            color,\n            acronym,\n            name,\n            dynamicStyle,\n            orientation\n          });\n        }\n      });\n      let shipList = shipsArray.map((ship, index) => (\n        <Ship key={index} ship={ship} />\n      ));\n      return <div>{shipList}</div>;\n    }\n  } else {\n    return null;\n  }\n};\n\nexport default Ships;\n","import React from \"react\";\n\nconst ShipsButtons = ({ allShips, handleShipClick }) => {\n  let shipsAbbreviated = [\"AC\", \"BS\", \"SM\", \"DS\", \"CR\"];\n  let buttonList = shipsAbbreviated.map(ship => (\n    <div key={ship}>\n      <button\n        id={ship}\n        onClick={() => handleShipClick(ship)}\n        className={`btn ${ship + \"ship-width\"} ship-buttons ${\n          allShips[ship].color\n        }`}\n      >\n        {allShips[ship].name.toUpperCase()}\n      </button>\n      <br />\n    </div>\n  ));\n  return <div>{buttonList}</div>;\n};\n\nexport default ShipsButtons;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\"; //Connects redux store to component.\nimport { firestoreConnect } from \"react-redux-firebase\"; //Connects firestore to redux store.\nimport { compose } from \"redux\";\n\n//COMPONENTS:\nimport Grid from \"./Grid\";\nimport Ships from \"./Ships\";\nimport ShipsButtons from \"./ShipsButtons\";\n\n// ACTIONS:\nimport { finalizePlayerGrid } from \"../../store/actions/gameActions\";\n\nclass PlayerSetup extends Component {\n  state = {\n    haveAllShipsBeenPlaced: false,\n    messageToUser: \"\",\n    allOccupiedBlocks: [],\n    shipClicked: \"AC\",\n    orientation: \"horizontal\",\n    AC: {\n      location: null,\n      orientation: null,\n      name: \"aircraft carrier\",\n      acronym: \"AC\",\n      color: \"red\",\n      occupiedBlocks: [],\n      size: 5\n    },\n    BS: {\n      location: null,\n      orientation: null,\n      name: \"battleship\",\n      acronym: \"BS\",\n      color: \"orange\",\n      occupiedBlocks: [],\n      size: 4\n    },\n    SM: {\n      location: null,\n      orientation: null,\n      name: \"submarine\",\n      acronym: \"SM\",\n      color: \"green\",\n      occupiedBlocks: [],\n      size: 3\n    },\n    DS: {\n      location: null,\n      orientation: null,\n      name: \"destroyer\",\n      acronym: \"DS\",\n      color: \"purple\",\n      occupiedBlocks: [],\n      size: 3\n    },\n    CR: {\n      location: null,\n      orientation: null,\n      name: \"cruiser\",\n      acronym: \"CR\",\n      color: \"blue\",\n      occupiedBlocks: [],\n      size: 2\n    }\n  };\n\n  handleShipClick = ship => {\n    this.setState({\n      shipClicked: ship\n    });\n  };\n  verticalClicked = () => {\n    this.setState({\n      orientation: \"vertical\"\n    });\n  };\n  horizontalClicked = () => {\n    this.setState({\n      orientation: \"horizontal\"\n    });\n  };\n  handleFinalize = (gameID, game, player, ships) => {\n    if (this.state.haveAllShipsBeenPlaced) {\n      this.props.finalizePlayerGrid(gameID, game, player, ships);\n    } else {\n      this.setState({\n        messageToUser: \"You need to place all of the ships to continue.\"\n      });\n    }\n  };\n  blockClicked = numLetter => {\n    if (this.state.shipClicked !== null) {\n      let message = \"\";\n      let blockClicked = numLetter;\n      let blockClickedLetter = blockClicked[0].toLowerCase();\n      blockClickedLetter = blockClickedLetter.charCodeAt(0) - 96;\n      let blockClickedNumber = blockClicked[1];\n      let blockClickedNumber2 = blockClicked[2];\n      if (blockClickedNumber2 !== undefined) {\n        blockClickedNumber = Number(blockClickedNumber + blockClickedNumber2);\n      } else {\n        blockClickedNumber = Number(blockClickedNumber);\n      }\n      let orientation = this.state.orientation;\n      let shipAcronym = this.state.shipClicked;\n      let shipName = this.state[this.state.shipClicked].name;\n\n      //Board Placement Restrictions:\n      let shipSize;\n      let okToGo = false;\n      //AIRCRAFT CARRIER CHECK:\n      if (shipAcronym === \"AC\") {\n        shipSize = 5;\n        if (orientation === \"horizontal\") {\n          if (blockClickedNumber < 7) {\n            okToGo = true;\n          }\n        } else {\n          if (blockClickedLetter < 7) {\n            okToGo = true;\n          }\n        }\n        //BATTLESHIP CHECK:\n      } else if (shipAcronym === \"BS\") {\n        shipSize = 4;\n        if (orientation === \"horizontal\") {\n          if (blockClickedNumber < 8) {\n            okToGo = true;\n          }\n        } else {\n          if (blockClickedLetter < 8) {\n            okToGo = true;\n          }\n        }\n      } else if (shipAcronym === \"CR\") {\n        shipSize = 2;\n        if (orientation === \"horizontal\") {\n          if (blockClickedNumber < 10) {\n            okToGo = true;\n          }\n        } else {\n          if (blockClickedLetter < 10) {\n            okToGo = true;\n          }\n        }\n      } else {\n        shipSize = 3;\n        if (orientation === \"horizontal\") {\n          if (blockClickedNumber < 9) {\n            okToGo = true;\n          }\n        } else {\n          if (blockClickedLetter < 9) {\n            okToGo = true;\n          }\n        }\n      }\n      if (okToGo === false) {\n        message = `You can't place the ${this.state[shipAcronym].name} ${\n          this.state.orientation\n        }ly on '${blockClicked}'. It will run off the edge of the grid.`;\n      }\n\n      //THIS SHIP REQUIRED BLOCKS\n      let requiredBlocks = [];\n      if (orientation === \"horizontal\") {\n        let letter = blockClicked[0]; //Needs to be uppercase.\n        for (let i = 0; i < shipSize; i++) {\n          requiredBlocks.push(letter + String(blockClickedNumber + i));\n        }\n      } else {\n        let number = String(blockClickedNumber);\n        for (let i = 0; i < shipSize; i++) {\n          let letter = blockClickedLetter + i;\n          letter = String.fromCharCode(96 + letter).toLocaleUpperCase();\n          requiredBlocks.push(letter + number);\n        }\n      }\n\n      //COMPARE REQUIRED TO CURRENT:\n      //First remove all current ships existing blocks from used block list.\n      let thisShipCurrentState = this.state[shipAcronym].occupiedBlocks;\n      let currentStateAllUsedBlocks = this.state.allOccupiedBlocks;\n      let currentAllLessCurrentShip = [];\n      if (currentStateAllUsedBlocks.length) {\n        currentStateAllUsedBlocks.forEach(block => {\n          if (!thisShipCurrentState.includes(block)) {\n            currentAllLessCurrentShip.push(block);\n          }\n        });\n      }\n\n      //Check if a collision between this ship and all others less this last.\n      currentAllLessCurrentShip.forEach(block => {\n        if (requiredBlocks.includes(block)) {\n          message = `You can't place the ${this.state[shipAcronym].name} ${\n            this.state.orientation\n          }ly on '${blockClicked}'. It will collide with another ship.`;\n          okToGo = false;\n        }\n      });\n\n      //Combine this ship new with current all less ship last:\n      let newAllUsedBlocks = [];\n      currentAllLessCurrentShip.forEach(block => {\n        newAllUsedBlocks.push(block);\n      });\n      requiredBlocks.forEach(block => {\n        newAllUsedBlocks.push(block);\n      });\n\n      //Find next ship.\n      let allOptions = [\"AC\", \"BS\", \"SM\", \"DS\", \"CR\"];\n      let currentIndex = allOptions.indexOf(this.state.shipClicked);\n      let nextShip;\n      if (currentIndex === 4) {\n        nextShip = allOptions[0];\n      } else {\n        nextShip = allOptions[currentIndex + 1];\n      }\n\n      //IF EVERYTHING IS OK CHANGE THE STATE:\n      if (okToGo) {\n        if (newAllUsedBlocks.length === 17) {\n          this.setState({\n            haveAllShipsBeenPlaced: true\n          });\n        }\n\n        this.setState({\n          [shipAcronym]: {\n            location: numLetter,\n            orientation: this.state.orientation,\n            name: shipName,\n            acronym: this.state[shipAcronym].acronym,\n            color: this.state[shipAcronym].color,\n            size: this.state[shipAcronym].size,\n            occupiedBlocks: requiredBlocks\n          },\n          allOccupiedBlocks: newAllUsedBlocks,\n          messageToUser: \"\",\n          shipClicked: nextShip\n        });\n      } else {\n        this.setState({\n          messageToUser: message\n        });\n      }\n    }\n  };\n\n  render() {\n    const { auth, game, gameID, thisPlayer } = this.props;\n\n    //AUTHENTICATION:\n    if (!auth.uid) {\n      console.log(\"Not logged in.\");\n      return <Redirect to=\"/splash\" />; //If not logged in redirect.\n    }\n    if (game) {\n      let userIsAuthorized = false;\n      game.players.forEach(player => {\n        if (player.userReference === auth.uid) {\n          userIsAuthorized = true;\n        }\n      });\n      if (userIsAuthorized === false) {\n        console.log(\"Not a member of this game.\");\n        return <Redirect to=\"/\" />; //If user is not part of game redirect.\n      }\n      if (thisPlayer.setUpBoard === true) {\n        return <Redirect to={\"/game/\" + gameID} />;\n      }\n    }\n\n    return (\n      <div className=\"full-height\">\n        <div className=\"row height-100\">\n          <div className=\"col l3 height-100\">\n            <div className=\"what-to-do\">\n              <h3>What to do:</h3>\n              <h6>(1) Click a ship to select it. (right side)</h6>\n              <h6>(2) Choose orientation. (vertical or horizontal)</h6>\n              <h6>(3) Select a grid-block to place it on.</h6>\n              <h6>(4) Place all five ships.</h6>\n              <h6>(5) Click the finalize button.</h6>\n            </div>\n            <div className=\"directions\">\n              <h4>Selected:</h4>\n              <div className=\"selected-ship center\">\n                {this.state.orientation === \"horizontal\" ? (\n                  <button\n                    className={`${this.state.shipClicked +\n                      \"ship-width\"} ship-buttons ${\n                      this.state[this.state.shipClicked].color\n                    }`}\n                  >\n                    {this.state[this.state.shipClicked].name.toUpperCase()}\n                  </button>\n                ) : (\n                  <button\n                    className={`${this.state.shipClicked +\n                      \"ship-width\"} ship-buttons right-90 ${\n                      this.state[this.state.shipClicked].color\n                    }`}\n                  >\n                    {this.state[this.state.shipClicked].name.toUpperCase()}\n                  </button>\n                )}\n              </div>\n\n              {this.state.messageToUser ? (\n                <div className=\"row messages-display\">\n                  <div className=\"col l2\">\n                    <h5 className=\"red-text center\">\n                      <b>NOTE:</b>\n                    </h5>\n                  </div>\n                  <div className=\"col l10 white-text\">\n                    <h6>{this.state.messageToUser}</h6>\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"col l6 center height-100\">\n            <h3>Set Up Your Board</h3>\n            {this.state.orientation === \"horizontal\" ? (\n              <div className=\"right-cursor\">\n                <Grid\n                  typeOfGrid={\"playerSetup\"}\n                  blockClicked={this.blockClicked}\n                />\n              </div>\n            ) : (\n              <div className=\"down-cursor\">\n                <Grid\n                  typeOfGrid={\"playerSetup\"}\n                  blockClicked={this.blockClicked}\n                />\n              </div>\n            )}\n          </div>\n          <div className=\"col l3 height-100\">\n            <div className=\"right-col\">\n              <div className=\"h-v-button-container\">\n                {this.state.orientation === \"horizontal\" ? (\n                  <div className=\"center\">\n                    <button\n                      className=\"btn black hz-btn\"\n                      onClick={this.verticalClicked}\n                    >\n                      Horizontal\n                    </button>\n                  </div>\n                ) : (\n                  <div className=\"center\">\n                    <button\n                      className=\"btn black vt-btn\"\n                      onClick={this.horizontalClicked}\n                    >\n                      Vertical\n                    </button>\n                  </div>\n                )}\n              </div>\n              <div className=\"ships center\">\n                {this.state.orientation === \"horizontal\" ? (\n                  <div className=\"shps-hz\">\n                    <ShipsButtons\n                      allShips={{\n                        [this.state.AC.acronym]: this.state.AC,\n                        [this.state.BS.acronym]: this.state.BS,\n                        [this.state.SM.acronym]: this.state.SM,\n                        [this.state.DS.acronym]: this.state.DS,\n                        [this.state.CR.acronym]: this.state.CR\n                      }}\n                      handleShipClick={this.handleShipClick}\n                    />\n                  </div>\n                ) : (\n                  <div className=\"shps-vt\">\n                    <ShipsButtons\n                      allShips={{\n                        [this.state.AC.acronym]: this.state.AC,\n                        [this.state.BS.acronym]: this.state.BS,\n                        [this.state.SM.acronym]: this.state.SM,\n                        [this.state.DS.acronym]: this.state.DS,\n                        [this.state.CR.acronym]: this.state.CR\n                      }}\n                      handleShipClick={this.handleShipClick}\n                    />\n                  </div>\n                )}\n              </div>\n              <div className=\"finalize-container center\">\n                {this.state.haveAllShipsBeenPlaced ? (\n                  <button\n                    onClick={() =>\n                      this.handleFinalize(gameID, game, thisPlayer, [\n                        this.state.AC,\n                        this.state.BS,\n                        this.state.SM,\n                        this.state.DS,\n                        this.state.CR\n                      ])\n                    }\n                    className=\"btn submit-button yellow darken-2 black-text\"\n                  >\n                    Finalize\n                  </button>\n                ) : (\n                  <button\n                    onClick={() => this.handleFinalize()}\n                    className=\"btn grey\"\n                  >\n                    Finalize\n                  </button>\n                )}\n              </div>\n              <Ships\n                allShips={{\n                  AC: this.state.AC,\n                  BS: this.state.BS,\n                  SM: this.state.SM,\n                  DS: this.state.DS,\n                  CR: this.state.CR\n                }}\n                who={\"me\"}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let users = state.firestore.ordered.users;\n  //SET GAME ID:\n  let gameID = ownProps.match.params.id;\n  //SET GAME:\n  let games = state.firestore.data.games;\n  let game = games ? games[gameID] : null;\n  //SET THIS PLAYER:\n  let thisUserID = state.firebase.auth.uid;\n  let thisPlayer = games\n    ? game.players.find(player => {\n        return player.userReference === thisUserID;\n      })\n    : null;\n  let otherPlayer = games\n    ? game.players.find(player => {\n        return player.userReference !== thisUserID;\n      })\n    : null;\n\n  let thisPlayerInfo = null;\n  if (users !== undefined && thisPlayer !== null) {\n    thisPlayerInfo = users.find(user => user.id === thisPlayer.userReference);\n  }\n\n  let otherPlayerInfo = null;\n  if (users !== undefined && otherPlayer !== null) {\n    otherPlayerInfo = users.find(user => user.id === otherPlayer.userReference);\n  }\n\n  return {\n    auth: state.firebase.auth,\n    game: game,\n    gameID: gameID,\n    users: users,\n    thisPlayer: thisPlayer,\n    thisPlayerInfo: thisPlayerInfo,\n    otherPlayer: otherPlayer,\n    otherPlayerInfo: otherPlayerInfo\n  };\n};\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    { finalizePlayerGrid }\n  ),\n  firestoreConnect([{ collection: \"users\" }, { collection: \"games\" }])\n)(PlayerSetup);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\"; //Connects redux store to component.\nimport { firestoreConnect } from \"react-redux-firebase\"; //Connects firestore to redux store.\nimport { compose } from \"redux\";\n\n//Actions:\nimport { createdToNull } from \"../../store/actions/gameActions\";\n\nconst CreatingGamePage = ({ gameID, game, gameInfo, createdToNull }) => {\n  //Revert redux state game ID to null. (if this didn't happen every time you clicked the create new game it would redirect you to the last game page you created.)\n  if (gameInfo.gameCreatedID !== null) {\n    createdToNull();\n  }\n\n  //REDIRECT TO GAME PAGE IF CREATED:\n  if (game !== undefined && game !== null)\n    return <Redirect to={\"/setup/\" + gameID} />;\n\n  return (\n    <div className=\"loading-game\">\n      <p>Loading game...</p>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  //SET GAME ID:\n  let gameID = ownProps.match.params.id;\n  let games = state.firestore.data.games;\n  let game = games ? games[gameID] : null;\n  return {\n    gameID: gameID,\n    game: game,\n    gameInfo: state.gameReducer\n  };\n};\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    { createdToNull }\n  ),\n  firestoreConnect([{ collection: \"games\" }])\n)(CreatingGamePage);\n","import React from \"react\";\n\nconst Pins = ({ hits, misses, who }) => {\n  if (hits !== null) {\n    if (who === \"me\") {\n      let hitsArray = [];\n      hits.forEach(hit => {\n        let element = document.getElementById(\"other\" + hit);\n        let windowInfo = element.getBoundingClientRect();\n        let scrollLeft =\n          window.pageXOffset || document.documentElement.scrollLeft;\n        let scrollTop =\n          window.pageYOffset || document.documentElement.scrollTop;\n        let top = windowInfo.top + scrollTop;\n        let left = windowInfo.left + scrollLeft;\n\n        let dynamicStyle = {\n          position: \"absolute\",\n          left: left + \"px\",\n          top: top + \"px\"\n        };\n\n        let name = hit;\n        hitsArray.push({\n          dynamicStyle,\n          name\n        });\n      });\n      let missesArray = [];\n      misses.forEach(miss => {\n        let element = document.getElementById(\"other\" + miss);\n        let windowInfo = element.getBoundingClientRect();\n        let scrollLeft =\n          window.pageXOffset || document.documentElement.scrollLeft;\n        let scrollTop =\n          window.pageYOffset || document.documentElement.scrollTop;\n        let top = windowInfo.top + scrollTop;\n        let left = windowInfo.left + scrollLeft;\n\n        let dynamicStyle = {\n          position: \"absolute\",\n          left: left + \"px\",\n          top: top + \"px\"\n        };\n\n        let name = miss;\n        missesArray.push({\n          dynamicStyle,\n          name\n        });\n      });\n      let hitList = hitsArray.map((hit, index) => (\n        <span key={index} className=\"red pin\" style={hit.dynamicStyle} />\n      ));\n      let missList = missesArray.map((miss, index) => (\n        <span key={index} className=\"white pin\" style={miss.dynamicStyle} />\n      ));\n      return (\n        <span>\n          {hitList}\n          {missList}\n        </span>\n      );\n    } else {\n      let hitsArray = [];\n      hits.forEach(hit => {\n        let element = document.getElementById(hit);\n        let windowInfo = element.getBoundingClientRect();\n        let scrollLeft =\n          window.pageXOffset || document.documentElement.scrollLeft;\n        let scrollTop =\n          window.pageYOffset || document.documentElement.scrollTop;\n        let top = windowInfo.top + scrollTop;\n        let left = windowInfo.left + scrollLeft;\n\n        let dynamicStyle = {\n          position: \"absolute\",\n          left: left + \"px\",\n          top: top + \"px\"\n        };\n\n        let name = hit;\n        hitsArray.push({\n          dynamicStyle,\n          name\n        });\n      });\n      let missesArray = [];\n      misses.forEach(miss => {\n        let element = document.getElementById(miss);\n        let windowInfo = element.getBoundingClientRect();\n        let scrollLeft =\n          window.pageXOffset || document.documentElement.scrollLeft;\n        let scrollTop =\n          window.pageYOffset || document.documentElement.scrollTop;\n        let top = windowInfo.top + scrollTop;\n        let left = windowInfo.left + scrollLeft;\n\n        let dynamicStyle = {\n          position: \"absolute\",\n          left: left + \"px\",\n          top: top + \"px\"\n        };\n\n        let name = miss;\n        missesArray.push({\n          dynamicStyle,\n          name\n        });\n      });\n      let hitList = hitsArray.map((hit, index) => (\n        <span key={index} className=\"red pin\" style={hit.dynamicStyle} />\n      ));\n      let missList = missesArray.map((miss, index) => (\n        <span key={index} className=\"white pin\" style={miss.dynamicStyle} />\n      ));\n      return (\n        <span>\n          {hitList}\n          {missList}\n        </span>\n      );\n    }\n  } else {\n    return null;\n  }\n};\n\nexport default Pins;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\"; //Connects redux store to component.\nimport { firestoreConnect } from \"react-redux-firebase\"; //Connects firestore to redux store.\nimport { compose } from \"redux\";\n\nimport moment from \"moment\";\n\n//COMPONENTS:\nimport Grid from \"./Grid\";\nimport Ships from \"./Ships\";\nimport Pins from \"./Pins\";\n\n// ACTIONS:\nimport { submitGuess } from \"../../store/actions/gameActions\";\nimport { gameOver } from \"../../store/actions/gameActions\";\n\nclass GamePlay extends Component {\n  state = {\n    propsLoaded: false,\n    updated: false,\n    messageToUser: null,\n    yourTurnArrived: false\n  };\n\n  blockClicked = numLetter => {\n    let existingGuesses = JSON.parse(\n      JSON.stringify(this.props.thisPlayer.guessedBlocks)\n    );\n    let guess = numLetter;\n    let thisID = this.props.thisPlayer.id;\n    let turn = this.props.game.whosTurn;\n    let thisPlayerInfo = this.props.thisPlayerInfo;\n    let otherPlayer = this.props.otherPlayer;\n\n    if (this.props.game.status === \"inProgress\") {\n      if (thisID === turn) {\n        if (otherPlayer.setUpBoard === true) {\n          //CHECK IF ALREADY GUESSED:\n          let alreadyChecked = false;\n          let thingsToCheck = [\"AC\", \"BS\", \"SM\", \"DS\", \"CR\", \"MISSES\"];\n          let countShipsHit = 0;\n          thingsToCheck.forEach(thing => {\n            existingGuesses[thing].forEach(priorGuess => {\n              if (priorGuess === guess) {\n                alreadyChecked = true;\n              }\n              if (thing !== \"MISSES\") {\n                countShipsHit++;\n              }\n            });\n          });\n          //IF NOT ALREADY GUESSED:\n          if (alreadyChecked === false) {\n            let hit = false;\n            otherPlayer.ships.forEach(ship => {\n              ship.occupiedBlocks.forEach(block => {\n                if (block === guess) {\n                  countShipsHit++;\n                  hit = true;\n                  existingGuesses[ship.acronym].push(block); //HIT\n                  console.log(\"hit\", guess);\n                }\n              });\n            });\n            if (hit !== true) {\n              existingGuesses.MISSES.push(guess); //MISS\n              console.log(\"missed\", guess);\n            }\n\n            //UPDATE DATABASE WITH GUESS (weather or not it hit):\n            //IF ALL SHIPS HIT RUN END GAME LOGIC:\n            if (countShipsHit === 17) {\n              console.log(\"GAME OVER:\");\n              console.log(thisPlayerInfo.nickname, \"won!\");\n              this.props.gameOver(\n                this.props.gameID,\n                this.props.game,\n                this.props.thisPlayer.id,\n                existingGuesses\n              );\n            } else {\n              //OTHERWISE JUST UPDATE THE DATABASAE AS NORMAL:\n              this.props.submitGuess(\n                this.props.gameID,\n                this.props.game,\n                this.props.thisPlayer.id,\n                existingGuesses\n              );\n            }\n            this.setState({\n              messageToUser: null,\n              yourTurnArrived: false\n            });\n          } else {\n            this.setState({\n              messageToUser: `Already guessed '${guess}'.`\n            });\n          }\n        } else {\n          console.log(\"Other player is setting up their board.\");\n        }\n      } else {\n        this.setState({\n          messageToUser: \"It's not your turn.\"\n        });\n      }\n    } else {\n      console.log(\"Can't click when the game is over.\");\n    }\n  };\n\n  componentDidUpdate() {\n    if (this.state.propsLoaded === true) {\n      if (this.props.game.whosTurn === this.props.thisPlayer.id) {\n        if (this.state.yourTurnArrived === false) {\n          this.setState({\n            yourTurnArrived: true,\n            messageToUser: null\n          });\n        }\n      } else {\n        if (this.state.yourTurnArrived === true) {\n          this.setState({\n            yourTurnArrived: false,\n            messageToUser: null\n          });\n        }\n      }\n\n      if (this.props.game.status === \"gameOver\") {\n        if (this.state.messageToUser) {\n          this.setState({\n            messageToUser: null\n          });\n        }\n      }\n\n      if (this.state.updated === false) {\n        this.setState({\n          updated: true\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      auth,\n      game,\n      gameID,\n      thisPlayer,\n      thisPlayerInfo,\n      shipsFormated,\n      otherPlayer,\n      otherPlayerInfo,\n      otherShipsFormated\n    } = this.props;\n    if (game !== null && thisPlayer !== null && otherPlayer !== null) {\n      if (this.state.propsLoaded === false) {\n        this.setState({\n          propsLoaded: true\n        });\n      }\n    }\n\n    //AUTHENTICATION:\n    if (!auth.uid) {\n      console.log(\"Not logged in.\");\n      return <Redirect to=\"/splash\" />; //If not logged in redirect.\n    }\n    if (game) {\n      let userIsAuthorized = false;\n      game.players.forEach(player => {\n        if (player.userReference === auth.uid) {\n          userIsAuthorized = true;\n        }\n      });\n      if (userIsAuthorized === false) {\n        console.log(\"Not a member of this game.\");\n        return <Redirect to=\"/\" />; //If user is not part of game redirect.\n      }\n      if (thisPlayer.setUpBoard === false) {\n        return <Redirect to={\"/setup/\" + gameID} />;\n      }\n    }\n\n    if (game) {\n      //GENERATE DATE/TIME:\n      let utcSeconds = game.createdAt.seconds;\n      let utcMilliseconds = game.createdAt.nanoseconds / 1000000;\n      let date = new Date(0);\n      date.setUTCSeconds(utcSeconds);\n      date.setUTCMilliseconds(utcMilliseconds);\n\n      //WHAT SHIPS HAVE BEEN HIT?\n      let sunkShips = [];\n      let allGuesses = thisPlayer.guessedBlocks;\n      if (allGuesses.AC.length === 5) {\n        sunkShips.push(\"AC\");\n      }\n      if (allGuesses.BS.length === 4) {\n        sunkShips.push(\"BS\");\n      }\n      if (allGuesses.SM.length === 3) {\n        sunkShips.push(\"SM\");\n      }\n      if (allGuesses.DS.length === 3) {\n        sunkShips.push(\"DS\");\n      }\n      if (allGuesses.CR.length === 2) {\n        sunkShips.push(\"CR\");\n      }\n      if (game.status === \"gameOver\") {\n        sunkShips = [\"AC\", \"BS\", \"SM\", \"DS\", \"CR\"];\n      }\n\n      //HIT AND MISS PINS:\n      let thingsThatAreHits = [\"AC\", \"BS\", \"SM\", \"DS\", \"CR\"];\n      //MY GUESSES\n      let hitPins = [];\n      thingsThatAreHits.forEach(thing => {\n        thisPlayer.guessedBlocks[thing].forEach(hit => {\n          hitPins.push(hit);\n        });\n      });\n      let missPins = [];\n      thisPlayer.guessedBlocks.MISSES.forEach(miss => {\n        missPins.push(miss);\n      });\n      //OTHER PLAYER GUESSES\n      let othersHitPins = [];\n      thingsThatAreHits.forEach(thing => {\n        otherPlayer.guessedBlocks[thing].forEach(hit => {\n          othersHitPins.push(hit);\n        });\n      });\n      let othersMissPins = [];\n      otherPlayer.guessedBlocks.MISSES.forEach(miss => {\n        othersMissPins.push(miss);\n      });\n\n      let otherPlayerSettingUp = null;\n      if (otherPlayer.setUpBoard === false) {\n        otherPlayerSettingUp = `Waiting for ${\n          otherPlayerInfo.nickname\n        } to finish\n          setting up their board.`;\n      }\n\n      return (\n        <div className=\"full-height\">\n          <div className=\"row height-100\">\n            <div className=\"col l2 height-100\">\n              <div className=\"game-info\">\n                <div className=\"title-date\">\n                  <h4>{game.gameName.toUpperCase()}</h4>\n                  <p>Started: {moment(date).calendar()}</p>\n                </div>\n                {game.status === \"inProgress\" ? (\n                  <div>\n                    {!otherPlayerSettingUp ? (\n                      <div>\n                        <h5>Whos Turn:</h5>\n                        {game.whosTurn === thisPlayer.id ? (\n                          <div>\n                            {thisPlayer.id === 0 ? (\n                              <div className=\"red small-player-name-bar\">\n                                <h5 className=\"make-inline\">\n                                  {thisPlayerInfo.nickname}\n                                </h5>\n                                <p className=\"make-inline\"> (yours)</p>\n                              </div>\n                            ) : (\n                              <div className=\"blue small-player-name-bar\">\n                                <h5 className=\"make-inline\">\n                                  {thisPlayerInfo.nickname}\n                                </h5>\n                                <p className=\"make-inline\"> (yours)</p>\n                              </div>\n                            )}\n                          </div>\n                        ) : (\n                          <div>\n                            {thisPlayer.id === 0 ? (\n                              <div className=\"blue small-player-name-bar\">\n                                <h5 className=\"make-inline\">\n                                  {otherPlayerInfo.nickname}\n                                </h5>\n                              </div>\n                            ) : (\n                              <div className=\"red small-player-name-bar\">\n                                <h5 className=\"make-inline\">\n                                  {otherPlayerInfo.nickname}\n                                </h5>\n                              </div>\n                            )}\n                          </div>\n                        )}\n                      </div>\n                    ) : null}\n                  </div>\n                ) : (\n                  <div className=\"center\">\n                    <h3>Game Over!</h3>\n                    <h4>Champion:</h4>\n                    {game.winner === thisPlayer.id ? (\n                      <div>\n                        {thisPlayer.id === 0 ? (\n                          <h5 className=\"red small-player-name-bar\">\n                            {thisPlayerInfo.nickname}\n                          </h5>\n                        ) : (\n                          <h5 className=\"blue small-player-name-bar\">\n                            {thisPlayerInfo.nickname}\n                          </h5>\n                        )}\n                        <br />\n                        <img\n                          className=\"trophy-icon\"\n                          src={\"/images/champion.png\"}\n                          alt=\"trophy-player-won\"\n                        />\n                        <div>You are the winner!</div>\n                      </div>\n                    ) : (\n                      <div>\n                        {otherPlayer.id === 0 ? (\n                          <h5 className=\"red small-player-name-bar\">\n                            {otherPlayerInfo.nickname}\n                          </h5>\n                        ) : (\n                          <h5 className=\"blue small-player-name-bar\">\n                            {otherPlayerInfo.nickname}\n                          </h5>\n                        )}\n                        <br />\n                        <img\n                          className=\"skull-icon\"\n                          src={\"/images/skull.png\"}\n                          alt=\"skull-player-lost\"\n                        />\n                        <div>You lost!</div>\n                      </div>\n                    )}\n                  </div>\n                )}\n                {otherPlayerSettingUp ? (\n                  <div className=\"row center small-messages-display\">\n                    <h5 className=\"red-text\">\n                      <b>NOTE:</b>\n                    </h5>\n                    <h6 className=\"white-text\">{otherPlayerSettingUp}</h6>\n                  </div>\n                ) : null}\n                {this.state.messageToUser ? (\n                  <div className=\"row center small-messages-display\">\n                    <h5 className=\"red-text\">\n                      <b>NOTE:</b>\n                    </h5>\n                    <h6 className=\"white-text\">{this.state.messageToUser}</h6>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n            <div className=\"col l5 height-100\">\n              <div className=\"name-icon-container\">\n                {thisPlayer.id === 0 ? (\n                  <div className=\"red player-name-bar\">\n                    <h3 className=\"make-inline\">{thisPlayerInfo.nickname}</h3>\n                    <h5 className=\"make-inline\"> (you)</h5>\n                  </div>\n                ) : (\n                  <div className=\"blue player-name-bar\">\n                    <h3 className=\"make-inline\">{thisPlayerInfo.nickname}</h3>\n                    <h5 className=\"make-inline\"> (you)</h5>\n                  </div>\n                )}\n              </div>\n              <Grid typeOfGrid={\"gamePlay\"} blockClicked={null} />\n            </div>\n            <div className=\"col l5 height-100\">\n              <div className=\"name-icon-container\">\n                {otherPlayer.id === 0 ? (\n                  <div className=\"red player-name-bar\">\n                    <h3 className=\"make-inline\">{otherPlayerInfo.nickname}</h3>\n                  </div>\n                ) : (\n                  <div className=\"blue player-name-bar\">\n                    <h3 className=\"make-inline\">{otherPlayerInfo.nickname}</h3>\n                  </div>\n                )}\n              </div>\n              {game.whosTurn === thisPlayer.id ? (\n                <div className=\"play-cursor\">\n                  <Grid\n                    typeOfGrid={\"otherPlayer\"}\n                    blockClicked={this.blockClicked}\n                  />\n                </div>\n              ) : (\n                <div className=\"cant-cursor\">\n                  <Grid\n                    typeOfGrid={\"otherPlayer\"}\n                    blockClicked={this.blockClicked}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n          <div id=\"ALL-SHIPS-AND-PINS\">\n            {this.state.updated === true ? (\n              <div>\n                <Ships allShips={shipsFormated} who={\"me\"} />\n                <Pins\n                  hits={othersHitPins}\n                  misses={othersMissPins}\n                  who={\"other\"}\n                />\n                <Ships\n                  allShips={otherShipsFormated}\n                  who={\"other\"}\n                  sunkShips={sunkShips}\n                />\n                <Pins hits={hitPins} misses={missPins} who={\"me\"} />\n              </div>\n            ) : null}\n          </div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let users = state.firestore.ordered.users;\n  //SET GAME ID:\n  let gameID = ownProps.match.params.id;\n  //SET GAME:\n  let games = state.firestore.data.games;\n  let game = games ? games[gameID] : null;\n  //SET THIS PLAYER:\n  let thisUserID = state.firebase.auth.uid;\n  let thisPlayer = games\n    ? game.players.find(player => {\n        return player.userReference === thisUserID;\n      })\n    : null;\n  let otherPlayer = games\n    ? game.players.find(player => {\n        return player.userReference !== thisUserID;\n      })\n    : null;\n\n  //FORMAT SHIPS FOR THIS USER:\n  let thisPlayerInfo = null;\n  let shipsFormated = null;\n  if (users !== undefined && thisPlayer !== null) {\n    thisPlayerInfo = users.find(user => user.id === thisPlayer.userReference);\n    if (thisPlayer.ships) {\n      shipsFormated = {\n        AC: thisPlayer.ships[0],\n        BS: thisPlayer.ships[1],\n        SM: thisPlayer.ships[2],\n        DS: thisPlayer.ships[3],\n        CR: thisPlayer.ships[4]\n      };\n    }\n  }\n  //FORMAT SHIPS FOR OTHER USER:\n  let otherPlayerInfo = null;\n  let otherShipsFormated = null;\n  if (users !== undefined && otherPlayer !== null) {\n    otherPlayerInfo = users.find(user => user.id === otherPlayer.userReference);\n    if (otherPlayer.ships) {\n      otherShipsFormated = {\n        AC: otherPlayer.ships[0],\n        BS: otherPlayer.ships[1],\n        SM: otherPlayer.ships[2],\n        DS: otherPlayer.ships[3],\n        CR: otherPlayer.ships[4]\n      };\n    }\n  }\n\n  return {\n    auth: state.firebase.auth,\n    game: game,\n    gameID: gameID,\n    users: users,\n    thisPlayer: thisPlayer,\n    thisPlayerInfo: thisPlayerInfo,\n    shipsFormated: shipsFormated,\n    otherPlayer: otherPlayer,\n    otherPlayerInfo: otherPlayerInfo,\n    otherShipsFormated: otherShipsFormated\n  };\n};\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    { submitGuess, gameOver }\n  ),\n  firestoreConnect([{ collection: \"users\" }, { collection: \"games\" }])\n)(GamePlay);\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n//npm i react-router-dom\n//BrowserRouter allows us to use React router throughout app.\n//Switch grabs only the first Route that matches.\n//Route directs to a specific jsx file.\n\n//IMPORTING COMPONENTS:\nimport Navbar from \"./components/layout/Navbar\";\nimport Splash from \"./components/dashboard/Splash\";\nimport Home from \"./components/dashboard/Home\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport HostPrivateGame from \"./components/dashboard/HostPrivateGame\";\nimport PlayerSetup from \"./components/games/PlayerSetup\";\nimport CreatingGamePage from \"./components/games/CreatingGamePage\";\nimport GamePlay from \"./components/games/GamePlay\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/splash\" component={Splash} />\n            <Route path=\"/hostPrivateGame\" component={HostPrivateGame} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/setup/:id\" component={PlayerSetup} />\n            <Route path=\"/game/:id\" component={GamePlay} />\n            <Route path=\"/createGame/:id\" component={CreatingGamePage} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from \"firebase/app\"; //Importing just the base features from firebase.\nimport \"firebase/firestore\"; //Importing the database from firebase.\nimport \"firebase/auth\"; //Importing auth abilities from firebase.\n\n// Initialize Firebase\n//npm i firebase\nvar config = {\n  apiKey: \"AIzaSyD7qFSAbO3KTA6wEjwBHXYUGdaFcJACYps\",\n  authDomain: \"battleship-57b30.firebaseapp.com\",\n  databaseURL: \"https://battleship-57b30.firebaseio.com\",\n  projectId: \"battleship-57b30\",\n  storageBucket: \"battleship-57b30.appspot.com\",\n  messagingSenderId: \"858555747586\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true }); //Update to handle timestamps.\n\nexport default firebase; //Make it available elsewhere in the app.\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  SIGNOUT_SUCCESS,\n  SIGNUP_SUCCESS,\n  SIGNUP_ERROR\n} from \"../actions/authActions\";\n\nconst initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case LOGIN_ERROR:\n      console.log(\"Login error.\");\n      return { ...state, authError: \"Login failed.\" };\n    case LOGIN_SUCCESS:\n      console.log(\"Login success.\");\n      return { ...state, authError: null };\n    case SIGNOUT_SUCCESS:\n      console.log(\"Sign out success.\");\n      return state;\n    case SIGNUP_SUCCESS:\n      console.log(\"Sign up success.\");\n      return { ...state, authError: null };\n    case SIGNUP_ERROR:\n      console.log(\"Sign up error.\");\n      return { ...state, authError: action.err.message };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import {\n  GENERATE_GAME,\n  GENERATE_GAME_ERROR,\n  CREATED_GAME_TO_NULL,\n  FINALIZE_GAME,\n  FINALIZE_GAME_ERROR,\n  GUESS,\n  GUESS_ERROR\n} from \"../actions/gameActions\";\n\nconst initState = { gameCreatedID: null };\n\nconst gameReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GENERATE_GAME:\n      console.log(\"generated game\", action.payload);\n      return { gameCreatedID: action.payload };\n    case GENERATE_GAME_ERROR:\n      console.log(\"error generating game\", action.payload);\n      return state;\n    case CREATED_GAME_TO_NULL:\n      console.log(\"reverted game ID to null in redux state\");\n      return { gameCreatedID: null };\n    case FINALIZE_GAME:\n      console.log(\"finalized game\", action.payload);\n      return state;\n    case FINALIZE_GAME_ERROR:\n      console.log(\"error finalizing game\", action.payload);\n      return state;\n    case GUESS:\n      console.log(\"guess reached reducer\", action.payload);\n      return state;\n    case GUESS_ERROR:\n      console.log(\"guess error at reducer\", action.payload);\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;\n","import { combineReducers } from \"redux\"; //Combines reducers.\nimport { firestoreReducer } from \"redux-firestore\"; //Pre-made reducer to sync firestore data with state in the background.\nimport { firebaseReducer } from \"react-redux-firebase\"; //Pre-made reducer to sync firebase auth with redux.\n\nimport authReducer from \"./authReducer\";\nimport gameReducer from \"./gameReducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  gameReducer: gameReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n//npm i redux react-redux\nimport { createStore, applyMiddleware, compose } from \"redux\"; //Allows us to use Redux Store and applyMiddleware.\nimport { Provider } from \"react-redux\"; //Passes redux store into app.\n\n//npm i redux-thunk\nimport thunk from \"redux-thunk\"; //Thunk allows for async requests in Redux. It pauses the dispatch, gets the external data, then resumes the dispatch.\n\n//npm i react-redux-firebase redux-firestore\n//This allows firebase to interact with react and redux\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\n\nimport fbConfig from \"./config/fbconfig\";\n\n//Root Reducer:\nimport rootReducer from \"./store/reducers/rootReducer\";\n\n//Creates the redux store using rootReducer and adds redux thunk as middleware.\n//Also added an extra argument to thunk; an object { getFirebase, getFirestore }.\n//Compose lets us tell firebase/firestore what db to use via fbconfig.\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true, //sync store profile with users in db\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\n//Will render after firebaseAuth is ready.\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n  serviceWorker.unregister();\n});\n"],"sourceRoot":""}